{
  "permissions": {
    "allow": [
      "Bash(git clone:*)",
      "Bash(git init:*)",
      "Bash(git remote add:*)",
      "Bash(git pull:*)",
      "Bash(npm install:*)",
      "Bash(npm start)",
      "Bash(dir:*)",
      "Bash(ls:*)",
      "Bash(rm:*)",
      "Bash(node:*)",
      "Bash(npm run build:*)",
      "Bash(curl:*)",
      "Bash(npm run dev:*)",
      "Bash(npx ts-node:*)",
      "Bash(taskkill:*)",
      "Bash(pkill:*)",
      "Bash(mv:*)",
      "Bash(npx tsc:*)",
      "Bash(sqlite3:*)",
      "Bash(del enable-leveling.js)",
      "Bash(grep:*)",
      "Bash(git add:*)",
      "Bash(find:*)",
      "Bash(npm run typecheck:*)",
      "Bash(npm run)",
      "Bash(true)",
      "Bash(npm run compile:*)",
      "Bash(npm run lint)",
      "Bash(sed:*)",
      "WebFetch(domain:github.com)",
      "Bash(npm run dashboard:build:*)",
      "mcp__ide__getDiagnostics",
      "Bash(pgrep:*)",
      "Bash(ping:*)",
      "Bash(npm:*)",
      "Bash(mkdir:*)",
      "Bash(npx @playwright/mcp@latest:*)",
      "Bash(npx playwright:*)",
      "Bash(playwright-mcp:*)",
      "Bash(cmd /c:*)",
      "Bash(where npx)",
      "Bash(npx:*)",
      "Bash(powershell:*)",
      "Bash(claude mcp remove:*)",
      "Bash(claude mcp add:*)",
      "Bash(node:*)",
      "Bash(npm:*)",
      "Bash(timeout 10 npm start)",
      "Bash(timeout 5 npm start)",
      "WebFetch(domain:buildermethods.com)",
      "Bash(copy:*)",
      "Bash(set NODE_OPTIONS=\"--trace-deprecation\")",
      "Bash(del cleanup-duplicate-mod-logs.js)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_wait_for",
      "mcp__playwright__browser_press_key",
      "mcp__playwright__browser_close",
      "mcp__playwright__browser_take_screenshot",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_evaluate",
      "mcp__playwright__browser_select_option",
      "Bash(del cleanup-dm-command-logs.js check-dm-logs.js)",
      "mcp__playwright__browser_type",
      "Bash(del fix-rss-config.js)",
      "Bash(tsc)",
      "mcp__playwright__browser_network_requests",
      "mcp__playwright__browser_handle_dialog",
      "WebFetch(domain:localhost)",
      "Bash(del check-integrations.js check-integration-logs.js)",
      "Bash(tsc --noEmit)",
      "Bash(timeout 15 npm start)",
      "Bash(where node)",
      "Bash(del test-weather-integration.js run-weather-migration.js)",
      "Bash(del debug-logging.js debug-log-channel-logic.js test-moderation-logging.js)",
      "Bash(del check-integrations-table.js)",
      "Bash(del fix-tickets-schema.js)",
      "Bash(tasklist:*)",
      "Bash(del \"C:\\Users\\PC\\Desktop\\VSC\\DiscordBotN\\src\\commands\\admin\\rules-manager.ts\")",
      "Bash(del scriptsfix-warnings-table.js scriptstest-warnings-table.js)",
      "Bash(del create-open-ticket-test.js)",
      "Bash(del \"C:\\Users\\PC\\Desktop\\VSC\\DiscordBotN\\debug-transcript-issue.js\")",
      "Bash(del test-create-ticket.js)",
      "Bash(git push:*)",
      "Bash(echo:*)",
      "Bash(scriptslocal-deploy.bat)",
      "Bash(git reset:*)",
      "Bash(git commit:*)",
      "Bash(git rm:*)",
      "Bash(python:*)",
      "Bash(del .dockerignore)",
      "Bash(del docker-compose.prod.yml)",
      "Bash(del run-message-logs-migration.js)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "playwright"
  ]
}